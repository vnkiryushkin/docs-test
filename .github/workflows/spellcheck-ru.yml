name: CSpell Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  spellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # ensures the full git history is available

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install CSpell
        run: |
          npm install -g cspell
          npm install -g @cspell/dict-ru_ru
          cspell link add @cspell/dict-ru_ru
          npm install -g @cspell/dict-en-common-misspellings
          cspell link add @cspell/dict-en-common-misspellings

      - name: Fetch all modified files
        id: files
        run: |
          echo "::set-output name=all_files::$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | tr '\n' ' ')"

      - name: Run CSpell on all changed files
        id: cspell_check
        continue-on-error: true
        run: |
          output=""
          for file in ${{ steps.files.outputs.all_files }}; do
            if [ "$file" = ".github/workflows/spellcheck-ru.yml" ] || [ "$file" = "cspell.json" ]; then
              echo "Skipping CSpell check for $file"
              continue
            fi
            echo "Checking $file for spelling errors..."
            result=$(cspell "$file" --config cspell.json)
            if [ -n "$result" ]; then
              output+="### Errors in $file:\n\\\\n$result\n\\\\n\n"
            fi
          done
          echo "::set-output name=results::${output}"

      - name: Post results as a PR comment
        if: steps.cspell_check.outputs.results != ''
        uses: actions/github-script@v5
        with:
          script: |
            const output = ${{ steps.cspell_check.outputs.results }};
            const prNumber = context.payload.pull_request.number;
            const repoName = context.repo.repo;
            const ownerName = context.repo.owner;
            github.rest.issues.createComment({
              owner: ownerName,
              repo: repoName,
              issue_number: prNumber,
              body: output
            });